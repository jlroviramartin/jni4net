//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class JavaVM : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal JavaVM(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(JavaVM obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~JavaVM() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          JNIPINVOKE.delete_JavaVM(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public void FUN() { }

  public int DestroyJavaVM() {
    int ret = JNIPINVOKE.JavaVM_DestroyJavaVM(swigCPtr);
    return ret;
  }

  public int AttachCurrentThread(SWIGTYPE_p_p_void penv, SWIGTYPE_p_void args) {
    int ret = JNIPINVOKE.JavaVM_AttachCurrentThread(swigCPtr, SWIGTYPE_p_p_void.getCPtr(penv), SWIGTYPE_p_void.getCPtr(args));
    return ret;
  }

  public int DetachCurrentThread() {
    int ret = JNIPINVOKE.JavaVM_DetachCurrentThread(swigCPtr);
    return ret;
  }

  public int GetEnv(SWIGTYPE_p_p_void penv, int version) {
    int ret = JNIPINVOKE.JavaVM_GetEnv(swigCPtr, SWIGTYPE_p_p_void.getCPtr(penv), version);
    return ret;
  }

  public int AttachCurrentThreadAsDaemon(SWIGTYPE_p_p_void penv, SWIGTYPE_p_void args) {
    int ret = JNIPINVOKE.JavaVM_AttachCurrentThreadAsDaemon(swigCPtr, SWIGTYPE_p_p_void.getCPtr(penv), SWIGTYPE_p_void.getCPtr(args));
    return ret;
  }

  public JavaVM() : this(JNIPINVOKE.new_JavaVM(), true) {
  }

}
