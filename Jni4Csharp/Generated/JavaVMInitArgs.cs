//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace es.jni {

public class JavaVMInitArgs : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal JavaVMInitArgs(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(JavaVMInitArgs obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~JavaVMInitArgs() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          JNIPINVOKE.delete_JavaVMInitArgs(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int version {
    set {
      JNIPINVOKE.JavaVMInitArgs_version_set(swigCPtr, value);
    } 
    get {
      int ret = JNIPINVOKE.JavaVMInitArgs_version_get(swigCPtr);
      return ret;
    } 
  }

  public int nOptions {
    set {
      JNIPINVOKE.JavaVMInitArgs_nOptions_set(swigCPtr, value);
    } 
    get {
      int ret = JNIPINVOKE.JavaVMInitArgs_nOptions_get(swigCPtr);
      return ret;
    } 
  }

  public JavaVMOption options {
    set {
      JNIPINVOKE.JavaVMInitArgs_options_set(swigCPtr, JavaVMOption.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = JNIPINVOKE.JavaVMInitArgs_options_get(swigCPtr);
      JavaVMOption ret = (cPtr == global::System.IntPtr.Zero) ? null : new JavaVMOption(cPtr, false);
      return ret;
    } 
  }

  public byte ignoreUnrecognized {
    set {
      JNIPINVOKE.JavaVMInitArgs_ignoreUnrecognized_set(swigCPtr, value);
    } 
    get {
      byte ret = JNIPINVOKE.JavaVMInitArgs_ignoreUnrecognized_get(swigCPtr);
      return ret;
    } 
  }

  public static JavaVMInitArgs create(int version) {
    global::System.IntPtr cPtr = JNIPINVOKE.JavaVMInitArgs_create__SWIG_0(version);
    JavaVMInitArgs ret = (cPtr == global::System.IntPtr.Zero) ? null : new JavaVMInitArgs(cPtr, false);
    return ret;
  }

  public static JavaVMInitArgs create(int version, int nOptions) {
    global::System.IntPtr cPtr = JNIPINVOKE.JavaVMInitArgs_create__SWIG_1(version, nOptions);
    JavaVMInitArgs ret = (cPtr == global::System.IntPtr.Zero) ? null : new JavaVMInitArgs(cPtr, false);
    return ret;
  }

  public int getOptions() {
    int ret = JNIPINVOKE.JavaVMInitArgs_getOptions(swigCPtr);
    return ret;
  }

  public void setOptions(int value) {
    JNIPINVOKE.JavaVMInitArgs_setOptions(swigCPtr, value);
  }

  public JavaVMOption get(int i) {
    JavaVMOption ret = new JavaVMOption(JNIPINVOKE.JavaVMInitArgs_get(swigCPtr, i), true);
    return ret;
  }

  public void set(int i, JavaVMOption value) {
    JNIPINVOKE.JavaVMInitArgs_set(swigCPtr, i, JavaVMOption.getCPtr(value));
    if (JNIPINVOKE.SWIGPendingException.Pending) throw JNIPINVOKE.SWIGPendingException.Retrieve();
  }

  public byte isIgnoreUnrecognized() {
    byte ret = JNIPINVOKE.JavaVMInitArgs_isIgnoreUnrecognized(swigCPtr);
    return ret;
  }

  public void setIgnoreUnrecognized(byte value) {
    JNIPINVOKE.JavaVMInitArgs_setIgnoreUnrecognized(swigCPtr, value);
  }

}

}
